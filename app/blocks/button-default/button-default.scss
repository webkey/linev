.button-default {
  $btn: &;

  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  margin: 0;
  padding: 1.2rem 2rem;
  overflow: hidden;
  color: $text-color-blue;
  font: bold 2rem/2.4rem $font-button;
  letter-spacing: normal;
  text-align: center;
  text-transform: uppercase;
  text-decoration: none;
  vertical-align: top;
  background-color: $button-color-white;
  //border: 0.2rem solid $button-color-white;
  border: none;
  box-shadow: none;
  cursor: pointer;
  transition: $animation-speed-out cubic-bezier(0.215, 0.61, 0.355, 1);
  user-select: none;
  -webkit-tap-highlight-color: transparent;

  &_reverse {
    flex-direction: row-reverse;
  }

  &::before {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    display: block;
    background-color: $button-color-black;
    transform: scaleY(0);
    transform-origin: right bottom;
    transition: $animation-speed-out cubic-bezier(0.215, 0.61, 0.355, 1);
    content: "";
    will-change: transform;
  }

  @include below($hd) {
    padding: 0.9rem 1.9rem;
    font-size: 1.6rem;
    line-height: 2rem;
  }

  @at-root {
    #{$btn},
    input#{$btn} {
      border-radius: 0;
    }
  }

  &_fixed-width {
    width: 22.8rem;
    max-width: 100%;
  }

  &_fixed-width-small {
    width: 9.8rem;
    max-width: 100%;
    padding-right: 0.5rem;
    padding-left: 0.5rem;
  }

  &_full-width {
    display: block;
    width: 100%;
    min-width: 0;
  }

  &_small {
    padding: 0.9rem 2.3rem;
  }

  // For small screen
  &_sm {
    @include below($sm) {
      &-full-width {
        display: block;
        width: 100%;
      }

      &-no-min-width {
        min-width: 0;
      }
    }
  }

  span {
    position: relative;
  }

  &__icon {
    position: relative;
    margin: -0.8rem 0.8rem -0.8rem -1.2rem;

    @include below($hd) {
      margin: -0.1rem 1rem -0.1rem -0.7rem;
    }

    #{$btn}_reverse & {
      margin: -0.8rem -1.2rem -0.8rem 0.8rem;

      @include below($hd) {
        margin: -0.1rem -0.7rem -0.1rem 1rem;
      }
    }
  }

  &:disabled,
  &.disabled {
    cursor: default;
    opacity: 0.5;
  }

  &:not(:disabled):not(.disabled):hover {
    color: $text-color-white;
    //background-color: $button-color-white--hover;
    //border-color: $button-color-white--hover;
    //transition-duration: $animation-speed;

    &::before {
      transform: scaleY(1);
      transition-duration: $animation-speed;
    }
  }

  &:not(:disabled):not(.disabled):active {
    transform: scale(0.98);
    transition-duration: 0.1s;
  }

  &.active:not(:disabled):not(.disabled) {
    color: #fff;
    background-color: $button-color-white--active;
    //border-color: $button-color-white--active;

    &:hover {
      background-color: darken($button-color-white--active, 10);
      border-color: darken($button-color-white--active, 10);
    }
  }

  &_blue {
    color: $text-color-white;
    background-color: $button-color-blue;

    &::before {
      background-color: $button-color-black;
    }
  }

  &_security {
    color: $text-color-white;
    text-transform: none;
    background-color: $brand-color-security;
    //border-color: $brand-color-security;

    &::before {
      background-color: $button-color-black;
    }
  }

  &_medical {
    color: $text-color-white;
    text-transform: none;
    background-color: $brand-color-medical;
    //border-color: $brand-color-medical;

    &::before {
      background-color: $button-color-black;
    }
  }

  &_science {
    color: $text-color-white;
    text-transform: none;
    background-color: $brand-color-innovation;
    //border-color: $brand-color-innovation;

    &::before {
      background-color: $button-color-black;
    }
  }

  &_innovation {
    color: $text-color-white;
    text-transform: none;
    background-color: $brand-color-science;
    //border-color: $brand-color-science;

    &::before {
      background-color: $button-color-black;
    }
  }
}
